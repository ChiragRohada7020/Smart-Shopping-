
services:
  jenkins:
    image: jenkins/jenkins:lts-jdk17
    container_name: jenkins
    ports:
      - "9090:8080"
      - "50000:50000"
    volumes:
      - jenkins_data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false
    networks:
      - mynet
    restart: unless-stopped

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - mynet
    restart: unless-stopped
    command: redis-server --bind 0.0.0.0 --protected-mode no
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    networks:
      - mynet
    depends_on:
      - redis
      - jenkins
    environment:
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - SPRING_REDIS_TIMEOUT=5000

  frontend:
    build:
      context: ./frontend/app
      dockerfile: Dockerfile
    ports:
      - "80:80"
    networks:
      - mynet
    depends_on:
      - backend

  amazon-scraper:
    build:
      context: ./webScrapping/amazon
      dockerfile: Dockerfile
    container_name: amazon-scraper  # Explicit container name
    ports:
      - "8085:8085"
    networks:
      - mynet

  flipkart-scraper:
    build:
      context: ./webScrapping/flipkart-scraper-api
      dockerfile: Dockerfile
    container_name: flipkart-scraper  # Explicit container name
    ports:
      - "8086:3000"
    networks:
      - mynet

volumes:
  jenkins_data:
  redis_data:

networks:
  mynet:
    driver: bridge